[build-system]
requires = [
    "setuptools>=64.0",          # PEP 660: editable pyproject.toml builds
    "setuptools_scm[toml]>=6.2",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "sleap"
version = "1.3.2"
authors = [{ name = "Talmo Periera", email = "talmo@salk.edu" }]
maintainers = [
    { name = "Liezl Maree", email = "talmo@salk.edu" },
    { name = "Shrivaths Shyam", email = "sshyam@salk.edu" },
    { name = "Divya Muraly", email = "dimurali@salk.edu" },
]
description = "SLEAP (Social LEAP Estimates Animal Poses): a deep learning framework for animal pose tracking."
readme = "README.md"
requires-python = ">=3.6"
keywords = [
    "deep-learning",
    "computer-vision",
    "pose-estimation",
    "animal-behavior",
    "animal-tracking",
    "sleap",
]
license = { text = "BSD-3-Clause" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Visualization",
]

dependencies = [
    # No conda packages for these
    # 0.3.3 results in https://github.com/O365/python-o365/issues/591
    "imgstore<0.30",
    "ndx-pose",
    # Constrain put on by @jgrewe from G-Node
    "nixio>=1.5.3",
    "qimage2ndarray",
    "segmentation-models",
    'tensorflow-macos==2.9.2; sys_platform == "darwin" and platform_machine == "arm64"',
    'tensorflow-metal==0.5.0; sys_platform == "darwin" and platform_machine == "arm64"',
    # Conda installing results in https://github.com/h5py/h5py/issues/2037
    # Newer versions result in error above, linking issue in Linux
    'h5py<3.2; sys_platform == "win32"',
    # 2.0.0 required by ndx-pose, 2.3.3 fixes importlib-metadata incompatibility
    "pynwb>=2.3.3",
]

[project.optional-dependencies]
pypi = [
    # This list of dependencies is re-listed in jupyter and dev
    # These are also distrubuted through conda and not pip installed when using conda.
    "attrs>=21.2.0,<=21.4.0",
    "cattrs==1.1.1",
    # certifi>=2017.4.17,<=2021.10.8
    "jsmin",
    "jsonpickle==1.2",
    "networkx",
    "numpy>=1.19.5",                #,<1.23.0",
    "opencv-python>=4.2.0,<=4.6.0",
    # opencv-python-headless>=4.2.0.34,<=4.5.5.62
    "pandas",
    "pillow>=8.3.1",                                                     #,<=8.4.0",
    "psutil",
    "pykalman",                                                          #==0.9.5",
    'PySide2>=5.13.2,<=5.14.1; platform_machine != "arm64"',
    'PySide6; sys_platform == "darwin" and platform_machine == "arm64"',
    "python-rapidjson",
    "pyyaml",
    "pyzmq",
    "qtpy>=2.0.1",
    "rich==10.16.1",
    "imageio<=2.15.0",
    "imgaug==0.4.0",
    "scipy>=1.4.1",                                                      #,<=1.9.0",
    "scikit-image",
    "scikit-learn ~=1.0",
    "scikit-video",
    "seaborn",
    "tensorflow",
    "tensorflow-hub",
]
conda_jupyter = ["ipykernel", "jupyterlab"] # No pypi dependencies included.
jupyter = [
    # Include conda_jupyter dependencies.
    "ipykernel",
    "jupyterlab",
    # Also include all pypi dependencies.
    # These are also distrubuted through conda and not pip installed when using conda.
    "attrs>=21.2.0,<=21.4.0",
    "cattrs==1.1.1",
    # certifi>=2017.4.17,<=2021.10.8
    "jsmin",
    "jsonpickle==1.2",
    "networkx",
    "numpy>=1.19.5",                         #,<1.23.0",
    "opencv-python-headless>=4.2.0,<=4.6.0",
    # opencv-python-headless>=4.2.0.34,<=4.5.5.62
    "pandas",
    "pillow>=8.3.1",                                                     #,<=8.4.0",
    "psutil",
    "pykalman",                                                          #==0.9.5",
    'PySide2>=5.13.2,<=5.14.1; platform_machine != "arm64"',
    'PySide6; sys_platform == "darwin" and platform_machine == "arm64"',
    "python-rapidjson",
    "pyyaml",
    "pyzmq",
    "qtpy>=2.0.1",
    "rich==10.16.1",
    "imageio<=2.15.0",
    "imgaug==0.4.0",
    "scipy>=1.4.1",                                                      #,<=1.9.0",
    "scikit-image",
    "scikit-learn ~=1.0",
    "scikit-video",
    "seaborn",
    "tensorflow",
    "tensorflow-hub",
]
conda_dev = [ # No pypi dependencies included.
    "pytest",
    "pytest-qt>=4.0.0",
    "pytest-cov<=3.0.0",
    "pytest-xvfb",
    "ipython",
    "sphinx",
    "sphinx-book-theme",
    "sphinx-copybutton",
    "nbformat==5.1.3",
    "myst-nb==0.13.2",
    "myst-parser==0.15.2",
    "linkify-it-py",
    "sphinx-autobuild",
    "black==21.6b0",
    "pre-commit",
    "twine==3.3.0",
    "PyGithub",
    "jedi==0.17.2",
    "click==8.0.4",
    # Also include all jupyter dependencies.
    "ipykernel",
    "jupyterlab",
]
dev = [
    # Include conda_dev dependencies.
    "pytest",
    "pytest-qt>=4.0.0",
    "pytest-cov<=3.0.0",
    "pytest-xvfb",
    "ipython",
    "sphinx",
    "sphinx-book-theme",
    "sphinx-copybutton",
    "nbformat==5.1.3",
    "myst-nb==0.13.2",
    "myst-parser==0.15.2",
    "linkify-it-py",
    "sphinx-autobuild",
    "black==21.6b0",
    "pre-commit",
    "twine==3.3.0",
    "PyGithub",
    "jedi==0.17.2",
    "click==8.0.4",
    # Also include all jupyter dependencies.
    "ipykernel",
    "jupyterlab",
    # Also include all pypi dependencies.
    # These are also distrubuted through conda and not pip installed when using conda.
    "attrs>=21.2.0,<=21.4.0",
    "cattrs==1.1.1",
    # certifi>=2017.4.17,<=2021.10.8
    "jsmin",
    "jsonpickle==1.2",
    "networkx",
    "numpy>=1.19.5",                                                     #,<1.23.0",
    "opencv-contrib-python>=4.6.0",
    "opencv-python>=4.6.0",
    "pandas",
    "pillow>=8.3.1",                                                     #,<=8.4.0",
    "psutil",
    "pykalman",                                                          #==0.9.5",
    'PySide2>=5.13.2,<=5.14.1; platform_machine != "arm64"',
    'PySide6; sys_platform == "darwin" and platform_machine == "arm64"',
    "python-rapidjson",
    "pyyaml",
    "pyzmq",
    "qtpy>=2.0.1",
    "rich==10.16.1",
    "imageio<=2.15.0",
    "imgaug==0.4.0",
    "scipy>=1.4.1",                                                      #,<=1.9.0",
    "scikit-image",
    "scikit-learn ~=1.0",
    "scikit-video",
    "seaborn",
    "tensorflow",
    "tensorflow-hub",
]
# dynamic = ["version", "dependencies"]

# [tool.setuptools.dynamic]
# dependencies = { file = ["requirements.txt"] }

# [tool.setuptools.dynamic.optional-dependencies]
# # # Unsure if we need to also add requirements.txt here...
# dev = { file = [
#     "pypi_requirements.txt",
#     "jupyter_requirements.txt",
#     "dev_requirements.txt",
# ] }
# jupyter = { file = ["pypi_requirements.txt", "jupyter_requirements.txt"] }
# pypi = { file = ["pypi_requirements.txt"] }

[project.gui-scripts]
sleap-label = "sleap.gui.app:main"

[project.scripts]
sleap-convert = "sleap.io.convert:main"
sleap-render = "sleap.io.visuals:main"
sleap-train = "sleap.nn.training:main"
sleap-track = "sleap.nn.inference:main"
sleap-inspect = "sleap.info.labels:main"
sleap-diagnostic = "sleap.diagnostic:main"
sleap-export = "sleap.nn.inference:export_cli"

[project.urls]
"Homepage" = "https://github.com/talmolab/sleap"
"Documentation" = "https://sleap.ai"
"Bug Tracker" = "https://github.com/talmolab/sleap/issues"
"Discussion Forum" = "https://github.com/talmolab/sleap/discussions"
"Lab Website" = "https://talmolab.org"

[tool.setuptools.packages.find]
where = ["."]
include = ["sleap*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
sleap = ["config/*.yaml", "training_profiles/*.json"]

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "dirty-tag"
